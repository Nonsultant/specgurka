@page "{id:guid}"
@model VizGurka.Pages.Features.Index

@{
  Layout = "~/Pages/Shared/_FeaturesLayout.cshtml";
}

<header class="test-header">
  <div>
    <img src="~/icons/@(Model.Feature.TestsPassed ? "check" : "cross").svg" alt="icon to represent the test result"/>
    <h1>@Model.Feature.Name</h1>
  </div>
  <p class="test-result-message">@(Model.Feature.TestsPassed ? "The test passed" : "The test did not pass")</p>
</header>

<div class="tab-container">
  <input type="radio" id="tab-scenarios" name="tab" checked>
  <label for="tab-scenarios">Scenarios</label>

  <input type="radio" id="tab-background" name="tab">
  <label for="tab-background">Background</label>

  <section class="tab-content">
    <div id="scenarios">
      <div class="scenario-container">
        @if (Model.Feature.Background is not null)
        {
          <div class="scenario">
            <h2>Background: @Model.Feature.Background.Name</h2>
            <hr/>
            <ul>
              @foreach (var step in Model.Feature.Background.Steps)
              {
                <li><strong>@step.Kind</strong> @step.Text</li>
                if (!string.IsNullOrEmpty(step.Table))
                {
                  @Html.Raw(Markdown.ToHtml(step.Table, new MarkdownPipelineBuilder().UseAdvancedExtensions().Build()))
                }
              }
            </ul>
          </div>
        }
        @foreach (var scenario in Model.Feature.Scenarios)
        {
          <div class="scenario">
            <h3>@scenario.Name</h3>
            <hr/>
            <ul>
              @foreach (var step in scenario.Steps)
              {
                <li><strong>@step.Kind</strong> @step.Text</li>
                if (!string.IsNullOrEmpty(step.Table))
                {
                  @Html.Raw(Markdown.ToHtml(step.Table.Replace("\n", String.Empty), new MarkdownPipelineBuilder().UseAdvancedExtensions().Build()))
                }
              }
            </ul>
          </div>
        }
        @foreach (var rule in Model.Feature.Rules)
        {
          <section class="rule">
            <h2>Rule: @rule.Name</h2>
            <hr/>
            @if (rule.Background is not null)
            {
              <div class="scenario">
                <h3>Background: @rule.Background.Name</h3>
                <hr/>
                <ul>
                  @foreach (var step in rule.Background.Steps)
                  {
                    <li><strong>@step.Kind</strong> @step.Text</li>
                    if (!string.IsNullOrEmpty(step.Table))
                    {
                      @Html.Raw(Markdown.ToHtml(step.Table.Replace("\n", String.Empty), new MarkdownPipelineBuilder().UseAdvancedExtensions().Build()))
                    }
                  }
                </ul>
              </div>
            }
            @foreach (var scenario in rule.Scenarios)
            {
              <div class="scenario">
                <h3>@scenario.Name</h3>
                <hr/>
                <ul>
                  @foreach (var step in scenario.Steps)
                  {
                    <li><strong>@step.Kind</strong> @step.Text</li>
                    if (!string.IsNullOrEmpty(step.Table))
                    {
                      @Html.Raw(Markdown.ToHtml(step.Table.Replace("\n", String.Empty), new MarkdownPipelineBuilder().UseAdvancedExtensions().Build()))
                    }
                  }
                </ul>
              </div>
            }
          </section>
        }
      </div>
    </div>

    <div id="background">
      @if (Model.Feature.Description is not null)
      {
        @Html.Raw(Markdown.ToHtml(Model.Feature.Description))
      }
      else
      {
        <p>No description for the feature.</p>
      }
    </div>
  </section>
</div>